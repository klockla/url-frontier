include:
    - project: "datateam/ecdp-infra/pipeline-template/docker"
      ref: 1.0.1
      file: 
          - '.docker.gitlab-ci.template.yml'

default:
  tags:
    - datateam-estat-large

variables:
  DEBUG: true
  # Default docker image
  BUILD_IMAGE: registry.fpfis.eu/estat/wihp/docker/alpine-docker-java:0-0-5-jdk17
  APP_NAME: urlfrontier
  
  # For AWS ECR
  AWS_DOCKER_REGISTRY: $AWS_REGISTRY_HOST
  AWS_ECR_REPO_NAME: $APP_NAME
  AWS_ECR_IMAGE_TAG: $CI_COMMIT_REF_SLUG
  AWS_REGION: $AWS_DEFAULT_REGION
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  ACR_DEPLOY_DISABLED: true

image: registry.fpfis.eu/estat/wihp/docker/alpine-docker-java:0-0-5-jdk17

cache:
  key: '$CI_COMMIT_REF_NAME'
  paths:
    - .maven/

stages:
  - repository_check
  - docker_linting
  - build
  - test
#  - analyze
  - release
  - docker_build
  - docker_scanning
  - docker_deploy

before_script:
  - export NG_CLI_ANALYTICS="false"
  - export MAVEN_USER_HOME=`pwd`/.maven

# nohttp:
  # needs: []
  # stage: check
  # script:
    # - mvn -ntp checkstyle:check -Dmaven.repo.local=$MAVEN_USER_HOME -s ci_settings.xml

maven-compile:
  needs: []
  stage: build
  script:
    - mvn -ntp compile -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/classes/
      - target/generated-sources/
    expire_in: 1 day

maven-test:
  stage: test
  script:
    #- ./mvnw -ntp verify -P-webapp -Dmaven.repo.local=$MAVEN_USER_HOME -DskipITs #-Dspring.profiles.active=testcontainers
#    - mvn -ntp verify -P-webapp -Dmaven.repo.local=$MAVEN_USER_HOME -s ci_settings.xml
    - mvn -ntp verify -Dmaven.repo.local=$MAVEN_USER_HOME

  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
    paths:
      - target/surefire-reports
      - target/failsafe-reports
      - target/site
    expire_in: 1 day
  cache:
    - key: 'test_$CI_PIPELINE_ID'
      paths:
        - target/
    - key: '$CI_COMMIT_REF_NAME'
      paths:
        - .maven/

maven-dependency:
  stage: test
  image: registry.fpfis.eu/estat/wihp/docker/owasp-dependency-check:master
  script:
    - mvn -DskipFormatCode=true -DskipTests org.owasp:dependency-check-maven:aggregate -DdataDirectory=/owasp -DnvdApiKey=$NVD_API_KEY -DautoUpdate=false -Dmaven.repo.local=$MAVEN_USER_HOME
    # script:
    # - ./mvnw verify -DskipTests=true -Pdependency -s ci_settings.xml -DnvdApiKey=$NVD_API_KEY
  artifacts:
    reports:
      junit:
        - target/dependency-check-junit.xml
    paths:
      - target
    expire_in: 1 day
  cache:
    - key: 'test_$CI_PIPELINE_ID'
      paths:
        - target/
    - key: '$CI_COMMIT_REF_NAME'
      paths:
        - .maven/

maven-deploy:
 stage: release
 needs: ['maven-test', 'maven-compile']
 script:
   - mvn deploy -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME -s ci_settings.xml

docker_build:
  image: $BUILD_IMAGE
  stage: docker_build
  needs: ['maven-test', 'maven-compile', 'maven-deploy']
  script: |
    cd service && mvn -ntp clean package jib:build -DskipTests -DskipFormatCode=true -Djib.to.image=$CONTAINER_TEST_IMAGE -Djib.from.auth.username=gitlab-ci-token -Djib.from.auth.password=$CI_JOB_TOKEN -Djib.to.auth.username=gitlab-ci-token -Djib.to.auth.password=$CI_JOB_TOKEN -Dmaven.repo.local=$MAVEN_USER_HOME -s ../ci_settings.xml

deploy_on_aws:
  stage: docker_deploy
  rules:
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: on_success
